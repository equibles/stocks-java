/*
 * Stocks
 * <h3>Authentication</h3>                     You need to authenticate to use this API.                     To authenticate click on the \"Authorize\" button and do one of the following steps.<br />                     1. Send your API key in the headers of the request by typing \"Bearer my-key\" on the Bearer authorization scheme.<br />                     2. Send your API key on the \"ApiKey\" query string parameter. To do this type your API key in the Query String authorization scheme.<br />                     Both methods are equally valid. We offer both options so that you can use the method that is easier to use in your application.<br />                     <br />                     <h3>API limits</h3>                     Your API key may be subject to daily/hourly limits. To know how much requests you have left look at the following headers in the response.<br />                     1. <strong>x-ratelimit-limit</strong> - The total number of requests that you are allowed to make in a given period (hour/day)                       2. <strong>x-ratelimit-remaining</strong> - The number of remaining requests that you can perform in the current period.<br />                     3. <strong>x-ratelimit-reset</strong> - The number of seconds until the current period resets.<br />                     <br />                     <h3>Suggestions</h3>                     You don't need to implement the whole API by hand in your programming language of choice.<br />                     Since this API has an OpenAPI specification you can use                      <a href=\"https://github.com/swagger-api/swagger-codegen\" target=\"_blank\">Swagger Generator</a>                      to automatically generate client stubs for more than 30 programming languages.                     <br />                     <br />                     You don't have an API key? <a href=\"https://www.equibles.com/api/pricing\" target=\"_blank\">Get one for free here.</a>
 *
 * OpenAPI spec version: v1
 * Contact: equibles@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.equibles.stocks.api;

import com.equibles.stocks.models.CommonStockResponse;
import com.equibles.stocks.models.CommonStocksResponse;
import com.equibles.stocks.models.OfficersResponse;
import com.equibles.stocks.models.ScreenerRequest;
import com.equibles.stocks.models.SplitsResponse;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for StocksApi
 */
@Ignore
public class StocksApiTest {

    private final StocksApi api = new StocksApi();

    /**
     * Get a list of all the available stocks.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listTest() throws Exception {
        Integer page = null;
        Integer pageSize = null;
        CommonStocksResponse response = api.list(page, pageSize);

        // TODO: test validations
    }
    /**
     * Get the officers of the company.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void officersTest() throws Exception {
        String fullTicker = null;
        OfficersResponse response = api.officers(fullTicker);

        // TODO: test validations
    }
    /**
     * The profile of this stock.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void profileTest() throws Exception {
        String fullTicker = null;
        CommonStockResponse response = api.profile(fullTicker);

        // TODO: test validations
    }
    /**
     * Get a list of stocks constraint to several criteria.
     *
     * Get a list of the stocks constraint to several criteria. You only need to fill the fields of ScreenerRequest that you want to use as filters.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void screenerTest() throws Exception {
        ScreenerRequest body = null;
        Integer page = null;
        Integer pageSize = null;
        CommonStocksResponse response = api.screener(body, page, pageSize);

        // TODO: test validations
    }
    /**
     * Search among all the available stocks.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void searchTest() throws Exception {
        String text = null;
        Integer page = null;
        Integer pageSize = null;
        CommonStocksResponse response = api.search(text, page, pageSize);

        // TODO: test validations
    }
    /**
     * Get all the splits for a given stock.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void splitsTest() throws Exception {
        String fullTicker = null;
        Integer page = null;
        Integer pageSize = null;
        SplitsResponse response = api.splits(fullTicker, page, pageSize);

        // TODO: test validations
    }
}
